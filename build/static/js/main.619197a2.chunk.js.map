{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Notification","messageStyle","message","type","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Filter","props","onChange","PersonForm","onSubmit","submit","value","name","onNameChange","number","onNumberChange","Persons","list","map","person","toLowerCase","includes","filter","onClick","onDelete","App","useState","persons","setPersons","newName","setNewName","filterValue","setFilterValue","newNumber","setNewNumber","setMessage","messageType","setMessageType","useEffect","personService","then","response","data","event","target","preventDefault","personObject","result","find","window","confirm","returnedPerson","catch","error","filteredPerson","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.619197a2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  remove: remove,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(\"\");\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const result = persons.find(({ name }) => name === newName);\n    let update = false;\n    if (result) {\n      update = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (update) {\n        personService.update(result.id, personObject).then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== result.id ? person : returnedPerson.data\n            )\n          );\n        });\n        return;\n      }\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n    personService\n      .create(personObject)\n      .then((response) => {\n        setMessage(`Successfully added ${personObject.name}`);\n        setMessageType(\"Success\");\n        personService.getAll().then((response) => {\n          setPersons(response.data);\n        });\n      })\n      .catch((error) => {\n        setMessage(error.response.data);\n        setMessageType(\"Error\");\n      });\n  };\n\n  const filterResults = (event) => {\n    const filter = event.target.value;\n    setFilterValue(filter);\n  };\n\n  const deletePerson = (person) => {\n    let result = window.confirm(`Delete ${person.name} ?`);\n    if (result) {\n      personService\n        .remove(person.id)\n        .then(\n          (response) =>\n            setPersons(\n              persons.filter(\n                (filteredPerson) => person.id !== filteredPerson.id\n              )\n            ),\n          setMessage(`Successfully removed ${person.name}`),\n          setMessageType(\"Success\")\n        )\n        .catch((error) => {\n          console.log(error);\n          setMessage(\n            `Information of ${person.name} has already been removed from server`\n          );\n          setMessageType(\"Error\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter onChange={filterResults} />\n      <h3>add a new</h3>\n      <PersonForm\n        name={newName}\n        onNameChange={handlePersonChange}\n        number={newNumber}\n        onNumberChange={handleNumberChange}\n        submit={addPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        list={persons}\n        filter={filterValue}\n        onDelete={deletePerson}\n      ></Persons>\n    </div>\n  );\n};\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  let messageStyle;\n  if (type === \"Error\") {\n    messageStyle = {\n      color: \"red\",\n      background: \"lightgrey\",\n      fontSize: \"20px\",\n      borderStyle: \"solid\",\n      borderRadius: \"5px\",\n      padding: \"10px\",\n      marginBottom: \"10px\",\n    };\n  } else {\n    messageStyle = {\n      color: \"green\",\n      background: \"lightgrey\",\n      fontSize: \"20px\",\n      borderStyle: \"solid\",\n      borderRadius: \"5px\",\n      padding: \"10px\",\n      marginBottom: \"10px\",\n    };\n  }\n  return <div style={messageStyle}>{message}</div>;\n};\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input onChange={props.onChange} />\n    </div>\n  );\n};\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.submit}>\n      <div>\n        name: <input value={props.name} onChange={props.onNameChange} />\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.list.map((person) => (\n        <div>\n          {person.name.toLowerCase().includes(props.filter.toLowerCase()) ? (\n            <p>\n              {person.name} {person.number}{\" \"}\n              <button onClick={() => props.onDelete(person)}>delete</button>\n            </p>\n          ) : null}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}